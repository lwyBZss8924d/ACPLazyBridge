{
  "includeCoAuthoredBy": false,
  "permissions": {
    "allow": [
      "mcp__serena__activate_project",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__onboarding",
      "mcp__serena__list_dir",
      "mcp__serena__search_for_pattern",
      "mcp__serena__get_symbols_overview",
      "mcp__serena__write_memory",
      "mcp__serena__think_about_whether_you_are_done",
      "Bash(chmod:*)",
      "Bash(python -m pytest tests/ -v)",
      "Bash(python -m pytest tests/test_sdd_validation.py -v)",
      "Bash(./scripts/sdd/run_semantic_checks.sh:*)",
      "Bash(git fetch:*)",
      "Bash(test:*)",
      "mcp__serena__list_memories",
      "mcp__serena__read_memory",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(ls:*)",
      "Bash(./scripts/ci/run-local-ci.sh:*)",
      "Bash(markdownlint --version)",
      "Bash(./scripts/ci/run-markdown-style.sh:*)",
      "Bash(markdownlint-cli2:*)",
      "Bash(scripts/ci/run-local-ci.sh:*)",
      "Bash(scripts/sdd/check-markdown.sh:*)",
      "Bash(scripts/ci/run-markdown-style.sh:*)",
      "Bash(scripts/sdd/fix-markdown.sh:*)",
      "mcp__serena__think_about_collected_information",
      "Bash(npx --yes markdownlint-cli2@latest \"sdd-rules/rules/documentation-style/sdd-rules-documentation-style.md\" --config .markdownlint.json)",
      "Bash(npx --yes markdownlint-cli2@latest \"sdd-rules/rules/documentation-style/sdd-rules-documentation-markdownlint.md\" --config .markdownlint.json)",
      "Bash(npx --yes markdownlint-cli2@latest \"sdd-rules/rules/documentation-style/*.md\" --config .markdownlint.json)",
      "Bash(npx --yes markdownlint-cli2@latest \"sdd-rules/rules/documentation-style/sdd-rules-documentation-*.md\" --config .markdownlint.json)",
      "Bash(npx --yes markdownlint-cli2@latest \"**/*.md\" --config .markdownlint.json)",
      "Bash(npx --yes markdownlint-cli2@latest \"sdd-rules/rules/tools-cli/*.md\" --config .markdownlint.json)",
      "Bash(ast-grep:*)",
      "Read(//private/tmp/**)",
      "Bash(npx --yes markdownlint-cli2@latest \"sdd-rules/rules/tools-cli/sdd-rules-tools-cli-astgrep.md\" --config .markdownlint.json)",
      "Read(//Users/arthur/Library/Application Support/Cursor/User/**)",
      "Read(//Users/arthur/dev-space/agent-client-protocol/**)",
      "Bash(grep:*)",
      "Bash(npx --yes markdownlint-cli2@latest \"CLAUDE.md\" --config .markdownlint.json)",
      "Bash(npx --yes markdownlint-cli2@latest \"scripts/README.md\" --config .markdownlint.json)",
      "Bash(npx --yes markdownlint-cli2@latest \"sdd-rules/CLAUDE.md\" --config .markdownlint.json)",
      "Bash(npx --yes markdownlint-cli2@latest \"sdd-rules/rules/README.md\" --config .markdownlint.json)",
      "Bash(npx --yes markdownlint-cli2@latest \"specs/CLAUDE.md\" --config .markdownlint.json)",
      "Bash(while read file)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(tail:*)",
      "Bash(done)",
      "Bash(for file in queries/CLAUDE.md dev-docs/review/_artifacts/CLAUDE.md)",
      "Bash(if [ -f \"$file\" ])",
      "Bash(then tail -3 \"$file\")",
      "Bash(else echo \"File not found\")",
      "Bash(fi)",
      "Bash(./scripts/sdd/validate-claude-md.sh:*)",
      "Bash(for file in WARP.md AGENTS.md)",
      "Bash(then tail -1 \"$file\")",
      "Bash(tree:*)",
      "Bash(npx --yes markdownlint-cli2@latest \".specify/README.md\" --config .markdownlint.json)",
      "Bash(command -v:*)",
      "Bash(cat:*)",
      "Bash(for file in CLAUDE.md sdd-rules/CLAUDE.md .specify/CLAUDE.md sdd-rules/rules/code-analysis/sdd-rules-code-analysis.md sdd-rules/rules/documentation-style/sdd-rules-documentation-markdownlint.md .specify/memory/constitution.md)",
      "Bash(while read f)",
      "Bash(do echo \"File: $f\")",
      "Bash(./scripts/sdd/migrate-to-yaml-metadata.sh:*)",
      "Bash(do:*)",
      "Bash(find:*)",
      "Bash(xargs:*)",
      "Bash(for file in CLAUDE.md sdd-rules/rules/documentation-style/sdd-rules-documentation-markdownlint.md .specify/memory/constitution.md)",
      "Bash(for file in CLAUDE.md .specify/CLAUDE.md sdd-rules/CLAUDE.md)",
      "Bash(awk:*)",
      "Bash(for file in CLAUDE.md .specify/memory/constitution.md sdd-rules/rules/documentation-style/sdd-rules-documentation-markdownlint.md)",
      "Bash(sed:*)",
      "Bash(./scripts/sdd/validate-metadata.sh:*)",
      "Bash(./scripts/sdd/query-metadata.sh:*)",
      "Bash(./scripts/sdd/check-sdd-consistency.sh:*)",
      "Bash(for:*)",
      "Bash(bash:*)",
      "Bash(gh issue view:*)",
      "Read(//Users/arthur/dev-space/acplb-worktrees/issue-templates-sdd-29/**)",
      "Bash(tee:*)",
      "Bash(ruby:*)",
      "Bash(gh pr view:*)",
      "mcp__ide__getDiagnostics",
      "Bash(git pull:*)",
      "Bash(git worktree remove:*)",
      "Bash(git worktree:*)",
      "Bash(git rm:*)",
      "Bash(python -m flake8:*)",
      "Bash(python3 -m flake8:*)",
      "Bash(.claude/hooks/inject-datetime.sh:*)",
      "Bash(.claude/hooks/validate-sdd-compliance.sh:*)",
      "Bash(.claude/hooks/sdd-task-fetch.sh:*)",
      "Bash(python3:*)",
      "Bash(./scripts/sdd/validate-sdd-docs.sh:*)",
      "Bash(yq eval:*)",
      "Bash(timeout:*)",
      "Read(///**)",
      "Bash(./scripts/ci/run-sdd-gates.sh:*)",
      "Bash(jq:*)",
      "Bash(./scripts/sdd/check-markdown.sh:*)",
      "Bash(./scripts/sdd/fix-markdown.sh:*)",
      "Bash(npx --yes markdownlint-cli2@latest \"**/*.md\" --config .markdownlint.json --fix --dry-run)",
      "Bash(npx --yes markdownlint-cli2@latest \"**/*.md\" --config .markdownlint.json --fix)",
      "Bash(mkdir:*)",
      "Bash(npx --yes markdownlint-cli2@latest \"specs/**/*.md\" --config .markdownlint.json)",
      "Bash(npx --yes markdownlint-cli2@latest \".specify/**/*.md\" --config .markdownlint.json)",
      "Bash(npx --yes markdownlint-cli2@latest \"README.md\" \"CONTRIBUTING.md\" \"CLAUDE.md\" --config .markdownlint.json)",
      "Bash(npx --yes markdownlint-cli2@latest \".github/**/*.md\" --config .markdownlint.json)",
      "Bash(npx:*)"
    ],
    "deny": [],
    "ask": []
  },
  "enabledMcpjsonServers": [
    "context7",
    "deepwiki"
  ],
  "hooks": {
    "UserPromptSubmit": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/.claude/hooks/inject-datetime.sh"
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/.claude/hooks/validate-sdd-compliance.sh",
            "timeout": 10
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/.claude/hooks/post-sdd-check.sh",
            "timeout": 30
          }
        ]
      }
    ]
  }
}